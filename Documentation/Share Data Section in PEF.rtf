{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fmodern\fcharset77 Courier;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww9000\viewh9000\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs24 \cf0 Subject: Driver Code Fragment getting re-loaded multiple times\
From: "Scott Taggart" <taggart@NoSpam.org>\
Date: Tue, 04 Sep 2001 09:39:32 -0700\
         \
Hi,\
         \
I have my device USB plugged in and my driver is loaded and happy.  Now, I \
plug in a new USB device (not one of my devices) to the system.  The system\
does its normal USB matching which includes loading my devices USB code\
frag (twice??).  Here's the problem - when my code frag is re-loaded, it is\
not detecting that there is already a copy of itself loaded.  I have the\
"Share Data Section" in the PEF linker section checked.  I verified that I \
am getting duplicate data sections by printing the address of a global and \
it's different from the first load (when my device is plugged in) and the\
second (and third) load when the other USB device is plugged in.\
         \
What's going on?  I could swear that this was once working in my driver...\
         \
Thanks,\
         \
Scott\
         \
----------------------------------------------------------------------\
         \
Subject: Re: Driver Code Fragment getting re-loaded multiple times\
From: "ericw" <ericw@NoSpam.com>\
Date: Tue, 04 Sep 2001 09:58:33 -0700\
         \
My experience with the MacOS9 USB subsystem is that it always loads a copy\
of the driver fragment, with its own separate data section regardless of\
selecting "Share Data Section".  I believe that this has been true by design\
since the beginning, I don't think it has changed.\
         \
I needed a shared data model for my driver and the way I solved this was to\
create a separate shared library that is manually linked to the driver using\
the GetSharedLibrary() call.  If you try to let the linker/loader connect\
the shared library, you again get a separate copy for every instance of the\
driver.  You also have to call SetDriverClosureMemory() to make sure the\
shared library is made VM safe.\
         \
There are also some tricks about putting this separate shared library into\
the same file as the driver itself.  Send me e-mail if you are interested...\
         \
Eric Welch\
Keyspan Engineering\
         \
> From: Scott Taggart <taggart@NoSpam.org>\
> Date: Tue, 4 Sep 2001 09:39:32 -0700\
> To: USB for Mac OS Developer Mailing List <usb@NoSpam.com>\
> Subject: Driver Code Fragment getting re-loaded multiple times\
>\
> Hi,\
>\
> I have my device USB plugged in and my driver is loaded and happy.  Now, I\
> plug in a new USB device (not one of my devices) to the system.  The system\
> does its normal USB matching which includes loading my devices USB code\
> frag (twice??).  Here's the problem - when my code frag is re-loaded, it is\
> not detecting that there is already a copy of itself loaded.  I have the\
> "Share Data Section" in the PEF linker section checked.  I verified that I\
> am getting duplicate data sections by printing the address of a global and\
> it's different from the first load (when my device is plugged in) and the\
> second (and third) load when the other USB device is plugged in.\
>\
> What's going on?  I could swear that this was once working in my driver...\
>\
> Thanks,\
>\
> Scott\
         \
----------------------------------------------------------------------\
         \
Subject: Re: Driver Code Fragment getting re-loaded multiple times\
From: "Drew Thaler" <drew@NoSpam.com>\
Date: Tue, 04 Sep 2001 10:10:13 -0700\
         \
         \
Short answer: never use the "share data section" flag.  It's kind of a hack,\
which has a number of rather evil side effects which you're probably not\
prepared for.\
         \
         \
Long answer: It's been a while since I delved into the gory details but this\
is what I remember.  Your code frag is loaded twice, once during matching\
and once as the real driver.  It's unloaded in between times, but your\
termination routine never gets called (side effect #1).  Second, bad things\
happen when that first instance goes away... eg, if you had two instances\
open at once, the second one's data would still point at the first one,\
which I believe gets fully unmapped (side effect #2).  You didn't hit this\
exact situation but you're still seeing weird effects.\
         \
The "Share data section" flag is really meant only for libraries which live\
in the extensions folder or the System file, are instantiated manually at\
startup into the system heap (the first instantiation should never be in an\
application heap) and are never ever unloaded.\
         \
The worst part about this flag is that (a) CodeWarrior makes it so easy to\
turn on but doesn't warn you that you really probably don't want to do it,\
and (b) your code can work with this flag set for a long time, until you\
need your CFM termination routine called, or until you get the inevitable\
crash (usually caused by #2 above).\
         \
         \
If you really need to share data, one option is to create a "globals lib"\
which you load once, and has nothing but a data section ... then install a\
gestalt selector to point at it.  Further instantiations then check for and\
use the gestalt selector if it's there.\
         \
cheers,\
 drew\
         \
         \
         \
On 9/4/01 9:39 AM, Scott Taggart (taggart@NoSpam.org) wrote:\
         \
> Hi,\
>\
> I have my device USB plugged in and my driver is loaded and happy.  Now, I\
> plug in a new USB device (not one of my devices) to the system.  The system\
> does its normal USB matching which includes loading my devices USB code\
> frag (twice??).  Here's the problem - when my code frag is re-loaded, it is\
> not detecting that there is already a copy of itself loaded.  I have the\
> "Share Data Section" in the PEF linker section checked.  I verified that I\
> am getting duplicate data sections by printing the address of a global and\
> it's different from the first load (when my device is plugged in) and the\
> second (and third) load when the other USB device is plugged in.\
>\
> What's going on?  I could swear that this was once working in my driver...\
>\
> Thanks,\
>\
> Scott\
         \
}